
Oasis3-MCT

Diffs from Oasis3

overall:
- all coupling is now direct.  gets are blocking, puts are 
  non-blocking.  get and put calls between models must match
  adequately to avoid deadlocks.
- like oasis3, the first coupling occurs at time=0 and the
  final coupling occurs at (ncouplings-1)*dt.
- all input and output files must be netcdf, binary not supported
- ability to send and receive more than 1 field with a coupling
  operation.  use colon delimited field names in namcouple input.
- a model output field (put) can be associated with more than one
  destination model (get).  In that case, the source model only
  needs to put the data once and that data will arrive at multiple
  destinations as specified by namcouple input file.  Different
  coupling frequencies and transforms are allowed for different
  coupling interactions of the same field.  In addition, a single
  coupling field can be sent to the same destination model using
  multiple transforms as long as the destination field name is
  unique.  For example
    T_SURF from model 1 -> T_SURF in model 2
    T_SURF from model 1 -> T_SURF_AVG in model2
    T_SURF from model 1 -> T_SURF in model 3 
  T_SURF only needs to be put from model 1 "once" per timestep and
  the data will arrive at the destination at the coupling
  frequency and with transforms specified in the namcouple file
  for each coupling interaction.
  The inverse of this coupling feature is not allowed, a single
  destination (get) field CANNOT be associated with multiple source (put)
  fields.

model usage:

- use mod_prism OR use mod_oasis instead of many use statements
  - mod_prism retains prior interface names
  - mod_prism has updated interface names, changing "prism" to "oasis" and
    dropping "_proto" in the interface name
- NO MPI2 support yet
- prism_put_inquire not supported yet
- prism_put_restart_proto not supported yet
- prism_get_freq not supported yet

namcouple:

- namcouple should be backwards compatable, but several things
  are NOT used or supported and are ignored
  - INIDATE is not used yet
  - CALTYPE is not used
  - AUXILARY is not used
  - ONCE time transformation not supported
  - REDGLO not supported
  - INVERT not supported
  - MASK not supported
  - EXTRAP not supported
  - CORRECT not supported
  - SCRIPR not supported yet
  - INTERP not supported
  - MOZAIC not supported
  - FILLING not supported
  - SUBGRID not supported
  - MASKP not supported
  - REVERSE not supported
  - GLORED not supported

- BLASOLD and BLASNEW only supports multiplication and addition
  terms to the fields, not field combinations.
- IGNORED and INGOUT no longer needed, redundant with EXPORTED and EXPOUT
  use of IGNORED and INGOUT converts to EXPORTED and EXPOUT respectively
- NLOGPRT sets debugging output levels for the coupling software
  and will lead to output to all log files.
- non-instant LOCTRANS options will use a restart file now
- fields of type OUTPUT now support a restart file argument to be
  compatable with LOCTRANS restart files
- SEQ setting has a slightly different meaning.  it is no longer
  needed to ensure correct coupling sequencing.  that is dependent
  only on the order of get and put calls in models.  SEQ is never
  required.  use of SEQ allows the coupling layer to detect
  potential deadlocks before they happen and to exit gracefully.
  use of SEQ is recommended when it makes sense to do so.
- there is a new MAPPING transform that allows use of previously generated
  mapping file for interpolation.  this replaces the various map
  generation options.
- support to couple multiple fields at a time.  this is supported through
  colon delmited field lists in the namcouple input, for example
  ATMTAUX:ATMTAUY:ATMHFLUX:ATMPREC TAUX:TAUY:HEATFLUX:FWFLUX in a single
  namcouple definition.  all fields will use the namcouple settings for
  that definition.  the prism_get and prism_put interfaces still only
  support sending (put) or receiving (get) one field at a time.  inside
  oasis, the fields are stored and and a single send or recieve is 
  executed for all fields.  this is useful in cases where multiple fields
  have the same coupling transforms or to reduce communication costs
  by aggregating multiple fields into a single communication.  this only
  works if there are no temporal dependencies between any of the fields
  in the field list.  in other words, all fields in the field list must
  be couple-able with the same sequence value.
- no support for map generation yet


Implementation Issues

- should encapsulate var, partition, coupling data in a datatype and
  make them allocates, not static with max.
- need to read namcouple and bcast
- support partitions 0,1,2,3 as before + 4 which is list of points where
  kparal(1) = 4
  kparal(2) = npoints
  kparal(3:npoints+2) = list of points in global index
- need to fix mpi2 initialization in prism_method_init
- need time manager
- need variable seq support
- initialization order, nulprt, mpi, compid

- do we want private module variables with get/put
  do we want public module variables with naming convention

fields in namcouple that don't appear in model def_var are ignored.
fields in def_var that don't appear in namcouple are ignored.
fields in def_var that don't result in an action via namcouple and other models' def_var are ignored.


once a coupling is established, both the get and put sides MUST
  get and put EVERY variable on at least the coupler period.

want to add mapping option to output and input (needs extensions to namcouple first)

