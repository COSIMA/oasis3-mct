#!/bin/ksh
#set -x
######################################################################
#
############### User's section #######################################
##
## - Define architecture and coupler (oasis3 or oasis4)
arch=corail
coupler=oasis3
host=`uname -n`
user=`whoami`
#
## - Define paths
srcdir=`pwd`
datadir=$srcdir/data_oasis3
casename=`basename $srcdir`

## - Define MPIRUN, only used for arch=Linux
#MPIRUN=/usr/local/mpich-1.2.7/bin/mpirun
#MPIRUN=/usr/local/pgi/linux86-64/9.0/mpi/mpich/bin/mpirun

## - Define names of executables, number of processes for the coupler
#
rundir=/lustre/globc/${user}/work_${casename}
#rundir=/space/${user}/work_${casename}

coupler_exe=oasis3.MPI1.x
exe1=toyocn
exe2=toyatm

############### End of user's section ################################

######################################################################
###
### 1. Copy source example directory containing everything needed
###    into rundir

\rm -fr $rundir
mkdir -p $rundir

cp -f $srcdir/*nc  $rundir/.

cp -f $datadir/*txt $rundir/.
cp -f $datadir/*nc  $rundir/.
cp -f $datadir/*.out* $rundir/.

cp -f $srcdir/$exe1 $rundir/.
cp -f $srcdir/$exe2 $rundir/.

cp -f $srcdir/oasis3.MPI1.x $rundir/$coupler_exe

cp -f $datadir/namcouple $rundir/namcouple.base
cp -f $datadir/*nc  $rundir/.

cd $rundir
######################################################################

###
### 3. Creation of configuration scripts

###---------------------------------------------------------------------
### Linux
###---------------------------------------------------------------------

if [ $arch == corail ] ; then

cat <<EOF > $rundir/run_$casename.$arch
# Nom du job
#PBS -N dev_ex
# Temps limite du job
#PBS -l walltime=00:10:00
# Nombre de processus
#PBS -l select=2:mpiprocs=24:ncpus=24
#PBS -l place=scatter:excl
# adresse email a utiliser
##PBS -M your_email
# Mail envoye a la fin du job
#PBS -m ae

cd $rundir

total_proc=48
nproc_oa3=1
base=-1

#for cnt in 3 4; do
#for loc in src dst; do
#for val in bfb sum opt; do

for cnt in 4 8 43; do
for loc in src dst; do
for val in bfb sum opt; do

# number of processes for each executable
nproc_exe1=\$cnt
nproc_exe2=\$((\$total_proc-\$cnt-\$nproc_oa3))

# number of processes involved in the coupling for the namcouple
ncpl_exe1=\$nproc_exe1
ncpl_exe2=\$nproc_exe2

echo ''
echo '*****************************************************************'
echo '*** '\$casename' : '\$run
echo ''
echo 'Rundir       :' \$rundir
echo 'Architecture :' $arch
echo 'Host         : '$host
echo 'User         : '$user
echo 'Coupler      :' $coupler
echo ''
echo $coupler_exe 'runs on 1 proc'
echo $exe1' runs on '\$nproc_exe1 'processes'
echo $exe2' runs on '\$nproc_exe2 'processes'
echo ''
echo ''

rm namcouple
cp -f namcouple.base namcouple
ed namcouple <<EOF1
g/nproc_exe1/s/nproc_exe1/\$nproc_exe1/
g/ncpl_exe1/s/ncpl_exe1/\$ncpl_exe1/
g/nproc_exe2/s/nproc_exe2/\$nproc_exe2/
g/ncpl_exe2/s/ncpl_exe2/\$ncpl_exe2/
g/test_loc/s/test_loc/\$loc/
g/test_option/s/test_option/\$val/
w
q
EOF1
#
#
######################################################################
source /usr/local/bin/intelmpi.sh
ulimit -s unlimited
#
#########################################################
#
mpirun -np \$nproc_oa3 ./$coupler_exe : -np \$nproc_exe1 ./$exe1 : -np \$nproc_exe2 ./$exe2
#
#########################################################

sdir="r_\${cnt}_\${loc}_\${val}"
if [ \$base == -1 ] ; then
  base=\${sdir}
fi

rm -r -f \$sdir
mkdir \$sdir
mv pout* \$sdir/
mv nout* \$sdir/
mv toy*.out* \$sdir/
mv toy*.timers* \$sdir/
mv F*toy*.nc \$sdir/
mv oasis.timer* \$sdir/
cp rst*.nc \$sdir/
cp toy*.timefile.txt \$sdir/
cp namcouple \$sdir/

#cd \${sdir}
#rm -f               ../\${sdir}.diags
#grep diags: pout* > ../\${sdir}.diags
#cd ../

cat >> postproc.ksh <<EOF2
ncdump \${sdir}/FRECVATM_toyatm_02.nc > \${sdir}.RECVATM.ncdump
ndif=\\\`diff \${base}.RECVATM.ncdump \${sdir}.RECVATM.ncdump | wc\\\`
echo " \${base}.RECVATM.ncdump \${sdir}.RECVATM.ncdump \\\${ndif}"
EOF2

#
done
done
done

EOF
else 
  echo 'For architecture='$arch ' you have to add your execution'
  exit
fi 

######################################################################
###
### 4. Execute the model

if [ $arch == Linux ] ; then

  echo 'broken for this test'
  exit 
  echo 'Executing the model using '$MPIRUN 
  $MPIRUN -p4pg appl-linux.conf ./$coupler_exe > runjob.err

elif [ $arch == corail ]; then
    echo 'Submitting the job to queue using qsub'
#    qsub -q debug $rundir/run_$casename.$arch
    qsub -q submit $rundir/run_$casename.$arch
    qstat
    
fi

echo $casename 'is executed or submitted to queue.'
echo 'Results are found in rundir : '$rundir 

######################################################################

